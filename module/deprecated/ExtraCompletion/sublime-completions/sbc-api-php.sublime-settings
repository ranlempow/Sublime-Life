{
  "scope": "source.php",

  "completions":
  [
    // PHP Array functions
    ["array_change_key_case\tPHPArray"   , "array_change_key_case"],
    ["array_chunk\tPHPArray"             , "array_chunk"],
    ["array_column\tPHPArray"            , "array_column"],
    ["array_combine\tPHPArray"           , "array_combine"],
    ["array_count_values\tPHPArray"      , "array_count_values"],
    ["array_diff_assoc\tPHPArray"        , "array_diff_assoc"],
    ["array_diff_key\tPHPArray"          , "array_diff_key"],
    ["array_diff_uassoc\tPHPArray"       , "array_diff_uassoc"],
    ["array_diff_ukey\tPHPArray"         , "array_diff_ukey"],
    ["array_diff\tPHPArray"              , "array_diff"],
    ["array_fill_keys\tPHPArray"         , "array_fill_keys"],
    ["array_fill\tPHPArray"              , "array_fill"],
    ["array_filter\tPHPArray"            , "array_filter"],
    ["array_flip\tPHPArray"              , "array_flip"],
    ["array_intersect_assoc\tPHPArray"   , "array_intersect_assoc"],
    ["array_intersect_key\tPHPArray"     , "array_intersect_key"],
    ["array_intersect_uassoc\tPHPArray"  , "array_intersect_uassoc"],
    ["array_intersect_ukey\tPHPArray"    , "array_intersect_ukey"],
    ["array_intersect\tPHPArray"         , "array_intersect"],
    ["array_key_exists\tPHPArray"        , "array_key_exists"],
    ["array_keys\tPHPArray"              , "array_keys"],
    ["array_map\tPHPArray"               , "array_map"],
    ["array_merge_recursive\tPHPArray"   , "array_merge_recursive"],
    ["array_merge\tPHPArray"             , "array_merge"],
    ["array_multisort\tPHPArray"         , "array_multisort"],
    ["array_pad\tPHPArray"               , "array_pad"],
    ["array_pop\tPHPArray"               , "array_pop"],
    ["array_product\tPHPArray"           , "array_product"],
    ["array_push\tPHPArray"              , "array_push"],
    ["array_rand\tPHPArray"              , "array_rand"],
    ["array_reduce\tPHPArray"            , "array_reduce"],
    ["array_replace_recursive\tPHPArray" , "array_replace_recursive"],
    ["array_replace\tPHPArray"           , "array_replace"],
    ["array_reverse\tPHPArray"           , "array_reverse"],
    ["array_search\tPHPArray"            , "array_search"],
    ["array_shift\tPHPArray"             , "array_shift"],
    ["array_slice\tPHPArray"             , "array_slice"],
    ["array_splice\tPHPArray"            , "array_splice"],
    ["array_sum\tPHPArray"               , "array_sum"],
    ["array_udiff_assoc\tPHPArray"       , "array_udiff_assoc"],
    ["array_udiff_uassoc\tPHPArray"      , "array_udiff_uassoc"],
    ["array_udiff\tPHPArray"             , "array_udiff"],
    ["array_uintersect_assoc\tPHPArray"  , "array_uintersect_assoc"],
    ["array_uintersect_uassoc\tPHPArray" , "array_uintersect_uassoc"],
    ["array_uintersect\tPHPArray"        , "array_uintersect"],
    ["array_unique\tPHPArray"            , "array_unique"],
    ["array_unshift\tPHPArray"           , "array_unshift"],
    ["array_values\tPHPArray"            , "array_values"],
    ["array_walk_recursive\tPHPArray"    , "array_walk_recursive"],
    ["array_walk\tPHPArray"              , "array_walk"],
    ["array\tPHPArray"                   , "array"],
    ["arsort\tPHPArray"                  , "arsort"],
    ["asort\tPHPArray"                   , "asort"],
    ["compact\tPHPArray"                 , "compact"],
    ["count\tPHPArray"                   , "count"],
    ["current\tPHPArray"                 , "current"],
    ["each\tPHPArray"                    , "each"],
    ["end\tPHPArray"                     , "end"],
    ["extract\tPHPArray"                 , "extract"],
    ["in_array\tPHPArray"                , "in_array"],
    ["key_exists\tPHPArray"              , "key_exists"],
    ["key\tPHPArray"                     , "key"],
    ["krsort\tPHPArray"                  , "krsort"],
    ["ksort\tPHPArray"                   , "ksort"],
    ["list\tPHPArray"                    , "list"],
    ["natcasesort\tPHPArray"             , "natcasesort"],
    ["natsort\tPHPArray"                 , "natsort"],
    ["next\tPHPArray"                    , "next"],
    ["pos\tPHPArray"                     , "pos"],
    ["prev\tPHPArray"                    , "prev"],
    ["range\tPHPArray"                   , "range"],
    ["reset\tPHPArray"                   , "reset"],
    ["rsort\tPHPArray"                   , "rsort"],
    ["shuffle\tPHPArray"                 , "shuffle"],
    ["sizeof\tPHPArray"                  , "sizeof"],
    ["sort\tPHPArray"                    , "sort"],
    ["uasort\tPHPArray"                  , "uasort"],
    ["uksort\tPHPArray"                  , "uksort"],
    ["usort\tPHPArray"                   , "usort"],

    // Variable handling
    ["boolval\tPHP"                  , "boolval"],
    ["debug_zval_dump\tPHP"          , "debug_zval_dump"],
    ["doubleval\tPHP"                , "doubleval"],
    ["empty\tPHP"                    , "empty"],
    ["floatval\tPHP"                 , "floatval"],
    ["get_defined_vars\tPHP"         , "get_defined_vars"],
    ["get_resource_type\tPHP"        , "get_resource_type"],
    ["gettype\tPHP"                  , "gettype"],
    ["import_request_variables\tPHP" , "import_request_variables"],
    ["intval\tPHP"                   , "intval"],
    ["is_array\tPHP"                 , "is_array"],
    ["is_bool\tPHP"                  , "is_bool"],
    ["is_callable\tPHP"              , "is_callable"],
    ["is_double\tPHP"                , "is_double"],
    ["is_float\tPHP"                 , "is_float"],
    ["is_int\tPHP"                   , "is_int"],
    ["is_integer\tPHP"               , "is_integer"],
    ["is_long\tPHP"                  , "is_long"],
    ["is_null\tPHP"                  , "is_null"],
    ["is_numeric\tPHP"               , "is_numeric"],
    ["is_object\tPHP"                , "is_object"],
    ["is_real\tPHP"                  , "is_real"],
    ["is_resource\tPHP"              , "is_resource"],
    ["is_scalar\tPHP"                , "is_scalar"],
    ["is_string\tPHP"                , "is_string"],
    ["isset\tPHP"                    , "isset"],
    ["print_r\tPHP"                  , "print_r"],
    ["serialize\tPHP"                , "serialize"],
    ["settype\tPHP"                  , "settype"],
    ["strval\tPHP"                   , "strval"],
    ["unserialize\tPHP"              , "unserialize"],
    ["unset\tPHP"                    , "unset"],
    ["var_dump\tPHP"                 , "var_dump"],
    ["var_export\tPHP"               , "var_export"],

    // Class/Object information
    ["__autoload\tPHP"              , "__autoload"],
    ["call_user_method_array\tPHP"  , "call_user_method_array"],
    ["call_user_method\tPHP"        , "call_user_method"],
    ["class_alias\tPHP"             , "class_alias"],
    ["class_exists\tPHP"            , "class_exists"],
    ["get_called_class\tPHP"        , "get_called_class"],
    ["get_class_methods\tPHP"       , "get_class_methods"],
    ["get_class_vars\tPHP"          , "get_class_vars"],
    ["get_class\tPHP"               , "get_class"],
    ["get_declared_classes\tPHP"    , "get_declared_classes"],
    ["get_declared_interfaces\tPHP" , "get_declared_interfaces"],
    ["get_declared_traits\tPHP"     , "get_declared_traits"],
    ["get_object_vars\tPHP"         , "get_object_vars"],
    ["get_parent_class\tPHP"        , "get_parent_class"],
    ["interface_exists\tPHP"        , "interface_exists"],
    ["is_a\tPHP"                    , "is_a"],
    ["is_subclass_of\tPHP"          , "is_subclass_of"],
    ["method_exists\tPHP"           , "method_exists"],
    ["property_exists\tPHP"         , "property_exists"],
    ["trait_exists\tPHP"            , "trait_exists"],

    // String
    ["addcslashes\tPHPString"                , "addcslashes"],
    ["addslashes\tPHPString"                 , "addslashes"],
    ["bin2hex\tPHPString"                    , "bin2hex"],
    ["chop\tPHPString"                       , "chop"],
    ["chr\tPHPString"                        , "chr"],
    ["chunk_split\tPHPString"                , "chunk_split"],
    ["convert_cyr_string\tPHPString"         , "convert_cyr_string"],
    ["convert_uudecode\tPHPString"           , "convert_uudecode"],
    ["convert_uuencode\tPHPString"           , "convert_uuencode"],
    ["count_chars\tPHPString"                , "count_chars"],
    ["crc32\tPHPString"                      , "crc32"],
    ["crypt\tPHPString"                      , "crypt"],
    ["echo\tPHPString"                       , "echo"],
    ["explode\tPHPString"                    , "explode"],
    ["fprintf\tPHPString"                    , "fprintf"],
    ["get_html_translation_table\tPHPString" , "get_html_translation_table"],
    ["hebrev\tPHPString"                     , "hebrev"],
    ["hebrevc\tPHPString"                    , "hebrevc"],
    ["hex2bin\tPHPString"                    , "hex2bin"],
    ["html_entity_decode\tPHPString"         , "html_entity_decode"],
    ["htmlentities\tPHPString"               , "htmlentities"],
    ["htmlspecialchars_decode\tPHPString"    , "htmlspecialchars_decode"],
    ["htmlspecialchars\tPHPString"           , "htmlspecialchars"],
    ["implode\tPHPString"                    , "implode"],
    ["join\tPHPString"                       , "join"],
    ["lcfirst\tPHPString"                    , "lcfirst"],
    ["levenshtein\tPHPString"                , "levenshtein"],
    ["localeconv\tPHPString"                 , "localeconv"],
    ["ltrim\tPHPString"                      , "ltrim"],
    ["md5_file\tPHPString"                   , "md5_file"],
    ["md5\tPHPString"                        , "md5"],
    ["metaphone\tPHPString"                  , "metaphone"],
    ["money_format\tPHPString"               , "money_format"],
    ["nl_langinfo\tPHPString"                , "nl_langinfo"],
    ["nl2br\tPHPString"                      , "nl2br"],
    ["number_format\tPHPString"              , "number_format"],
    ["ord\tPHPString"                        , "ord"],
    ["parse_str\tPHPString"                  , "parse_str"],
    ["print\tPHPString"                      , "print"],
    ["printf\tPHPString"                     , "printf"],
    ["quoted_printable_decode\tPHPString"    , "quoted_printable_decode"],
    ["quoted_printable_encode\tPHPString"    , "quoted_printable_encode"],
    ["quotemeta\tPHPString"                  , "quotemeta"],
    ["rtrim\tPHPString"                      , "rtrim"],
    ["setlocale\tPHPString"                  , "setlocale"],
    ["sha1_file\tPHPString"                  , "sha1_file"],
    ["sha1\tPHPString"                       , "sha1"],
    ["similar_text\tPHPString"               , "similar_text"],
    ["soundex\tPHPString"                    , "soundex"],
    ["sprintf\tPHPString"                    , "sprintf"],
    ["sscanf\tPHPString"                     , "sscanf"],
    ["str_getcsv\tPHPString"                 , "str_getcsv"],
    ["str_ireplace\tPHPString"               , "str_ireplace"],
    ["str_pad\tPHPString"                    , "str_pad"],
    ["str_repeat\tPHPString"                 , "str_repeat"],
    ["str_replace\tPHPString"                , "str_replace"],
    ["str_rot13\tPHPString"                  , "str_rot13"],
    ["str_shuffle\tPHPString"                , "str_shuffle"],
    ["str_split\tPHPString"                  , "str_split"],
    ["str_word_count\tPHPString"             , "str_word_count"],
    ["strcasecmp\tPHPString"                 , "strcasecmp"],
    ["strchr\tPHPString"                     , "strchr"],
    ["strcmp\tPHPString"                     , "strcmp"],
    ["strcoll\tPHPString"                    , "strcoll"],
    ["strcspn\tPHPString"                    , "strcspn"],
    ["strip_tags\tPHPString"                 , "strip_tags"],
    ["stripcslashes\tPHPString"              , "stripcslashes"],
    ["stripos\tPHPString"                    , "stripos"],
    ["stripslashes\tPHPString"               , "stripslashes"],
    ["stristr\tPHPString"                    , "stristr"],
    ["strlen\tPHPString"                     , "strlen"],
    ["strnatcasecmp\tPHPString"              , "strnatcasecmp"],
    ["strnatcmp\tPHPString"                  , "strnatcmp"],
    ["strncasecmp\tPHPString"                , "strncasecmp"],
    ["strncmp\tPHPString"                    , "strncmp"],
    ["strpbrk\tPHPString"                    , "strpbrk"],
    ["strpos\tPHPString"                     , "strpos"],
    ["strrchr\tPHPString"                    , "strrchr"],
    ["strrev\tPHPString"                     , "strrev"],
    ["strripos\tPHPString"                   , "strripos"],
    ["strrpos\tPHPString"                    , "strrpos"],
    ["strspn\tPHPString"                     , "strspn"],
    ["strstr\tPHPString"                     , "strstr"],
    ["strtok\tPHPString"                     , "strtok"],
    ["strtolower\tPHPString"                 , "strtolower"],
    ["strtoupper\tPHPString"                 , "strtoupper"],
    ["strtr\tPHPString"                      , "strtr"],
    ["substr_compare\tPHPString"             , "substr_compare"],
    ["substr_count\tPHPString"               , "substr_count"],
    ["substr_replace\tPHPString"             , "substr_replace"],
    ["substr\tPHPString"                     , "substr"],
    ["trim\tPHPString"                       , "trim"],
    ["ucfirst\tPHPString"                    , "ucfirst"],
    ["ucwords\tPHPString"                    , "ucwords"],
    ["vfprintf\tPHPString"                   , "vfprintf"],
    ["vprintf\tPHPString"                    , "vprintf"],
    ["vsprintf\tPHPString"                   , "vsprintf"],
    ["wordwrap\tPHPString"                   , "wordwrap"],

    // PHP Date
    ["checkdate\tPHPDate"                             , "checkdate"],
    ["date_add\tPHPDate"                              , "date_add"],
    ["date_create_from_format\tPHPDate"               , "date_create_from_format"],
    ["date_create_immutable_from_format\tPHPDate"     , "date_create_immutable_from_format"],
    ["date_create_immutable\tPHPDate"                 , "date_create_immutable"],
    ["date_create\tPHPDate"                           , "date_create"],
    ["date_date_set\tPHPDate"                         , "date_date_set"],
    ["date_default_timezone_get\tPHPDate"             , "date_default_timezone_get"],
    ["date_default_timezone_set\tPHPDate"             , "date_default_timezone_set"],
    ["date_diff\tPHPDate"                             , "date_diff"],
    ["date_format\tPHPDate"                           , "date_format"],
    ["date_get_last_errors\tPHPDate"                  , "date_get_last_errors"],
    ["date_interval_create_from_date_string\tPHPDate" , "date_interval_create_from_date_string"],
    ["date_interval_format\tPHPDate"                  , "date_interval_format"],
    ["date_isodate_set\tPHPDate"                      , "date_isodate_set"],
    ["date_modify\tPHPDate"                           , "date_modify"],
    ["date_offset_get\tPHPDate"                       , "date_offset_get"],
    ["date_parse_from_format\tPHPDate"                , "date_parse_from_format"],
    ["date_parse\tPHPDate"                            , "date_parse"],
    ["date_sub\tPHPDate"                              , "date_sub"],
    ["date_sun_info\tPHPDate"                         , "date_sun_info"],
    ["date_sunrise\tPHPDate"                          , "date_sunrise"],
    ["date_sunset\tPHPDate"                           , "date_sunset"],
    ["date_time_set\tPHPDate"                         , "date_time_set"],
    ["date_timestamp_get\tPHPDate"                    , "date_timestamp_get"],
    ["date_timestamp_set\tPHPDate"                    , "date_timestamp_set"],
    ["date_timezone_get\tPHPDate"                     , "date_timezone_get"],
    ["date_timezone_set\tPHPDate"                     , "date_timezone_set"],
    ["date\tPHPDate"                                  , "date"],
    ["getdate\tPHPDate"                               , "getdate"],
    ["gettimeofday\tPHPDate"                          , "gettimeofday"],
    ["gmdate\tPHPDate"                                , "gmdate"],
    ["gmmktime\tPHPDate"                              , "gmmktime"],
    ["gmstrftime\tPHPDate"                            , "gmstrftime"],
    ["idate\tPHPDate"                                 , "idate"],
    ["localtime\tPHPDate"                             , "localtime"],
    ["microtime\tPHPDate"                             , "microtime"],
    ["mktime\tPHPDate"                                , "mktime"],
    ["strftime\tPHPDate"                              , "strftime"],
    ["strptime\tPHPDate"                              , "strptime"],
    ["strtotime\tPHPDate"                             , "strtotime"],
    ["time\tPHPDate"                                  , "time"],
    ["timezone_abbreviations_list\tPHPDate"           , "timezone_abbreviations_list"],
    ["timezone_identifiers_list\tPHPDate"             , "timezone_identifiers_list"],
    ["timezone_location_get\tPHPDate"                 , "timezone_location_get"],
    ["timezone_name_from_abbr\tPHPDate"               , "timezone_name_from_abbr"],
    ["timezone_name_get\tPHPDate"                     , "timezone_name_get"],
    ["timezone_offset_get\tPHPDate"                   , "timezone_offset_get"],
    ["timezone_open\tPHPDate"                         , "timezone_open"],
    ["timezone_transitions_get\tPHPDate"              , "timezone_transitions_get"],
    ["timezone_version_get\tPHPDate"                  , "timezone_version_get"],

    // BBcode
    ["bbcode_add_element\tPHPBBCode"    , "bbcode_add_element"],
    ["bbcode_add_smiley\tPHPBBCode"     , "bbcode_add_smiley"],
    ["bbcode_create\tPHPBBCode"         , "bbcode_create"],
    ["bbcode_destroy\tPHPBBCode"        , "bbcode_destroy"],
    ["bbcode_parse\tPHPBBCode"          , "bbcode_parse"],
    ["bbcode_set_arg_parser\tPHPBBCode" , "bbcode_set_arg_parser"],
    ["bbcode_set_flags\tPHPBBCode"      , "bbcode_set_flags"]
  ]
}